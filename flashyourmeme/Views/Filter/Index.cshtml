@model flashyourmeme.Models.FilterViewModel

@{
    ViewData["Title"] = "Filter Library";
}
<div class="container mt-4 min-vh-100 template-overview">
    <h1 class="display-4 text-center mb-4 fw-bold">@ViewData["Title"]</h1>

    <div class="card">
        <div class="card-body text-center">
            <table class="table">
                <thead >
                    <tr >
                        <th class="align-content-center">No.</th>
                        <th class="align-content-center">Filter</th>
                        <th class="align-content-center">File Name</th>
                        <th class="align-content-center"><button type="submit" class="btn btn-outline-dark w-45"><i class="fa-sharp fa-solid fa-cloud-arrow-up"></i>Upload Filter</button></th>
                    </tr>
                </thead>
                <tbody class="align-middle">
                    @if (Model.Filters != null && Model.Filters.Any())
                    {
                        foreach (var item in Model.Filters)
                        {
                            <tr>
                                <td>@item.No</td>
                                <td><img src="@item.FilterImageUrl" alt="Filter Image" style="width:120px;height:120px;" /></td>
                                <td>@item.FileName</td>
                                <td>
                                    <button class="btn btn-danger" onclick="deleteRow(@item.No)">Delete</button>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4" class="text-center">No filters available</td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- Pagination -->
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", "Filter", new { page = i })">@i</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
</div>

<script>
    function deleteRow(no) {
        // Implement your delete functionality here.
        // For example, you might send an AJAX request to the server to delete the item.
        alert('Delete row with No: ' + no);
    }
</script>