@model flashyourmeme.Models.FilterViewModel

@{
    ViewData["Title"] = "Filter Library";
}
<div class="container mt-4 min-vh-100 template-overview">
    <h1 class="display-4 text-center mb-4 fw-bold">@ViewData["Title"]</h1>

    <div class="card">
        <div class="card-body text-center">
            <table class="table">
                <thead>
                    <tr>
                        <th class="align-content-center">No.</th>
                        <th class="align-content-center">Filter</th>
                        <th class="align-content-center">Filter Name</th>
                        <th class="align-content-center">
                            <button type="submit" class="btn btn-outline-dark w-45" data-bs-toggle="modal" data-bs-target="#uploadFilter">
                                <i class="fa-sharp fa-solid fa-cloud-arrow-up"></i>
                                Upload Filter
                            </button>
                        </th>
                    </tr>
                </thead>
                <tbody class="align-middle">
                    @if (Model.Filters != null && Model.Filters.Any())
                    {
                        foreach (var item in Model.Filters)
                        {
                            <tr>
                                <td>@item.No</td>
                                <td><img src="@item.FilterImageUrl" alt="Filter Image" style="width:120px;height:120px;" /></td>
                                <td>@item.FileName</td>
                                <td>
                                    <button class="btn btn-danger" onclick="deleteRow(@item.No)">Delete</button>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4" class="text-center">No filters available</td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- Pagination -->
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", "Filter", new { page = i })">@i</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="uploadFilter" tabindex="-1" aria-labelledby="uploadFilterLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="uploadFilterLabel">Upload Filter</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" enctype="multipart/form-data" action="/your-upload-endpoint">
                    <div class="mb-3">
                        <label for="templateFilter" class="form-label">Filter Name</label>
                        <input type="text" class="form-control" id="templateFilter" name="templateFilter" required>
                    </div>
                    <div class="mb-3">
                        <label for="templateFile" class="form-label">Upload Filter</label>
                        <div class="custom-file-upload">
                            <input type="file" class="form-control d-none" id="templateFile" accept="image/*" name="templateFile" required onchange="updateFileNameAndPreview()">
                            <label for="templateFile" id="uploadLabel" class="upload-icon-label">
                                <i class="fa-solid fa-cloud-arrow-up"></i>
                            </label>
                        </div>
                    </div>
                    <div class="img-b-preview">
                        <img id="imagePreview" class="img-fluid text-center mt-3 d-none" alt="Image Preview">
                    </div>
                    <button type="submit" class="btn btn-secondary w-100">Upload</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function deleteRow(no) {
        // Implement your delete functionality here.
        // For example, you might send an AJAX request to the server to delete the item.
        alert('Delete row with No: ' + no);
    }

    function updateFileNameAndPreview() {
        var input = document.getElementById('templateFile');
        var label = document.getElementById('uploadLabel');
        var file = input.files[0];
        var fileName = file.name;
        label.innerHTML = fileName;

        var reader = new FileReader();
        reader.onload = function (e) {
            var imagePreview = document.getElementById('imagePreview');
            imagePreview.src = e.target.result;
            imagePreview.classList.remove('d-none');
        };
        reader.readAsDataURL(file);
    }
</script>